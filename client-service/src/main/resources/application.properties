# 1. /health url and /info url
# if the application adds the prefix,the eureka url should also add the prefix
#management.context-path=/client
#eureka.instance.statusPageUrlPath=${management.context-path}/info
#eureka.instance.healthCheckUrlPath=${management.context-path}/health
# if the spring-boot alter the /health and /info url,the eureka url should also alter them
#endpoints.info.path=/appInfo
#endpoints.health.path=/checkHealth
#eureka.instance.statusPageUrlPath=/${endpoints.info.path}
#eureka.instance.healthCheckUrlPath=/${endpoints.health.path}

# let the spring-boot-actuator works the health ,not the default heart in eureka
eureka.client.healthcheck.enabled=true


# 2.datasource
spring.datasource.url = jdbc:mysql://localhost:3306/sm
spring.datasource.username = root
spring.datasource.password = root
# falure quickly is forbidden
spring.datasource.continueOnError=true
# you may not need the driver class name ,because spring mostly could know it 
dbpass spring.datasource.driver-class-name = com.mysql.jdbc.Driver
spring.datasource.max-idle=10
spring.datasource.max-wait=10000
spring.datasource.min-idle=5
spring.datasource.initial-size=5
#server.port=8011
server.session.timeout=10
server.tomcat.uri-encoding=UTF-8

# 3.name the service
spring.application.name = hello-service
server.port=8083
# 4.define the register url
eureka.client.serviceUrl.defaultZone = http://localhost:1111/eureka/
# highly userful eureka-server register
# eureka.client.serviceUrl.defaultZone = http://peer1:1111/eureka/,http://peer2:1112/eureka/

# 5.retry the service
# open the retry function
##spring.cloud.loadbalancer.retry.enabled=true
# hystrix'time must be more larger than the ribbon's,or the retry is not useful
##hystrix.command.default.execution.isolation.thread.timeoutInMilliseconds=10000
# connect timeout
##hello-service.ribbon.ConnectTimeout=250 
# handle timeout
##hello-service.ribbon.ReadTimeout=1000
# is it for all the operations to retry
##hello-service.ribbon.OkToRetryOnAllOperation=true
# change time for alter service
##hello-service.ribbon.MaxAutoRetriesNextServer=2
# the time for now service to change time
##hello-service.ribbon.MaxAutoRetries=1
